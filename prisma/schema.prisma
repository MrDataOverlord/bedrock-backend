generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  // MUST match your Render env var name
  url      = env("DATABASE_URL")
}

model Device {
  id        String   @id @default(cuid())
  userId    String?
  orgId     String?
  platform  String
  pushToken String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id           String   @id @default(cuid())
  email        String   @unique
  passwordHash String
  totpSecret   String?
  createdAt    DateTime @default(now())
}

model Org {
  id          String   @id @default(cuid())
  ownerUserId String
  name        String   @default("My Org")
  createdAt   DateTime @default(now())
  subscriptions Subscription[]
}

model Member {
  id        String   @id @default(cuid())
  orgId     String
  userId    String
  role      String   @default("owner")
  createdAt DateTime @default(now())
}

model PasswordToken {
  id         String   @id @default(cuid())
  userId     String   @index
  purpose    String   // "register" | "reset"
  tokenHash  String   @unique
  expiresAt  DateTime
  usedAt     DateTime?
  createdAt  DateTime @default(now())

  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Subscription {
  id               String   @id
  orgId            String
  org              Org      @relation(fields: [orgId], references: [id], onDelete: Cascade)
  provider         String   @default("manual")      // or 'stripe'
  status           String   @default("inactive")    // inactive|active|past_due|canceled
  currentPeriodEnd DateTime?
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  @@index([orgId])
}
